package enums

object NodeTag extends Enumeration {
  val T_Invalid = Value("Invalid")
  /*
     * TAGS FOR EXECUTOR NODES (execnodes.h)
     */
  val T_IndexInfo = Value("IndexInfo")
  val T_ExprContext = Value("ExprContext")
  val T_ProjectionInfo = Value("ProjectionInfo")
  val T_JunkFilter = Value("JunkFilter")
  val T_ResultRelInfo = Value("ResultRelInfo")
  val T_EState = Value("EState")
  val T_TupleTableSlot = Value("TupleTableSlot")
  /*
     * TAGS FOR PLAN NODES (plannodes.h)
     */
  val T_Plan = Value("Plan")
  val T_Result = Value("Result")
  val T_ProjectSet = Value("ProjectSet")
  val T_ModifyTable = Value("ModifyTable")
  val T_Append = Value("Append")
  val T_MergeAppend = Value("MergeAppend")
  val T_RecursiveUnion = Value("RecursiveUnion")
  val T_BitmapAnd = Value("BitmapAnd")
  val T_BitmapOr = Value("BitmapOr")
  val T_Scan = Value("Scan")
  val T_SeqScan = Value("SeqScan")
  val T_SampleScan = Value("SampleScan")
  val T_IndexScan = Value("IndexScan")
  val T_IndexOnlyScan = Value("IndexOnlyScan")
  val T_BitmapIndexScan = Value("BitmapIndexScan")
  val T_BitmapHeapScan = Value("BitmapHeapScan")
  val T_TidScan = Value("TidScan")
  val T_SubqueryScan = Value("SubqueryScan")
  val T_FunctionScan = Value("FunctionScan")
  val T_ValuesScan = Value("ValuesScan")
  val T_TableFuncScan = Value("TableFuncScan")
  val T_CteScan = Value("CteScan")
  val T_NamedTuplestoreScan = Value("NamedTuplestoreScan")
  val T_WorkTableScan = Value("WorkTableScan")
  val T_ForeignScan = Value("ForeignScan")
  val T_CustomScan = Value("CustomScan")
  val T_Join = Value("Join")
  val T_NestLoop = Value("NestLoop")
  val T_MergeJoin = Value("MergeJoin")
  val T_HashJoin = Value("HashJoin")
  val T_Material = Value("Material")
  val T_Sort = Value("Sort")
  val T_Group = Value("Group")
  val T_Agg = Value("Agg")
  val T_WindowAgg = Value("WindowAgg")
  val T_Unique = Value("Unique")
  val T_Gather = Value("Gather")
  val T_GatherMerge = Value("GatherMerge")
  val T_Hash = Value("Hash")
  val T_SetOp = Value("SetOp")
  val T_LockRows = Value("LockRows")
  val T_Limit = Value("Limit")
  /* these aren't subclasses of Plan: */
  val T_NestLoopParam = Value("NestLoopParam")
  val T_PlanRowMark = Value("PlanRowMark")
  val T_PlanInvalItem = Value("PlanInvalItem")
  /*
     * TAGS FOR PLAN STATE NODES (execnodes.h)
     *
     * These should correspond one-to-one with Plan node types.
     */
  val T_PlanState = Value("PlanState")
  val T_ResultState = Value("ResultState")
  val T_ProjectSetState = Value("ProjectSetState")
  val T_ModifyTableState = Value("ModifyTableState")
  val T_AppendState = Value("AppendState")
  val T_MergeAppendState = Value("MergeAppendState")
  val T_RecursiveUnionState = Value("RecursiveUnionState")
  val T_BitmapAndState = Value("BitmapAndState")
  val T_BitmapOrState = Value("BitmapOrState")
  val T_ScanState = Value("ScanState")
  val T_SeqScanState = Value("SeqScanState")
  val T_SampleScanState = Value("SampleScanState")
  val T_IndexScanState = Value("IndexScanState")
  val T_IndexOnlyScanState = Value("IndexOnlyScanState")
  val T_BitmapIndexScanState = Value("BitmapIndexScanState")
  val T_BitmapHeapScanState = Value("BitmapHeapScanState")
  val T_TidScanState = Value("TidScanState")
  val T_SubqueryScanState = Value("SubqueryScanState")
  val T_FunctionScanState = Value("FunctionScanState")
  val T_TableFuncScanState = Value("TableFuncScanState")
  val T_ValuesScanState = Value("ValuesScanState")
  val T_CteScanState = Value("CteScanState")
  val T_NamedTuplestoreScanState = Value("NamedTuplestoreScanState")
  val T_WorkTableScanState = Value("WorkTableScanState")
  val T_ForeignScanState = Value("ForeignScanState")
  val T_CustomScanState = Value("CustomScanState")
  val T_JoinState = Value("JoinState")
  val T_NestLoopState = Value("NestLoopState")
  val T_MergeJoinState = Value("MergeJoinState")
  val T_HashJoinState = Value("HashJoinState")
  val T_MaterialState = Value("MaterialState")
  val T_SortState = Value("SortState")
  val T_GroupState = Value("GroupState")
  val T_AggState = Value("AggState")
  val T_WindowAggState = Value("WindowAggState")
  val T_UniqueState = Value("UniqueState")
  val T_GatherState = Value("GatherState")
  val T_GatherMergeState = Value("GatherMergeState")
  val T_HashState = Value("HashState")
  val T_SetOpState = Value("SetOpState")
  val T_LockRowsState = Value("LockRowsState")
  val T_LimitState = Value("LimitState")
  /*
     * TAGS FOR PRIMITIVE NODES (primnodes.h)
     */
  val T_Alias = Value("Alias")
  val T_RangeVar = Value("RangeVar")
  val T_TableFunc = Value("TableFunc")
  val T_Expr = Value("Expr")
  val T_Var = Value("Var")
  val T_Const = Value("Const")
  val T_Param = Value("Param")
  val T_Aggref = Value("Aggref")
  val T_GroupingFunc = Value("GroupingFunc")
  val T_WindowFunc = Value("WindowFunc")
  val T_ArrayRef = Value("ArrayRef")
  val T_FuncExpr = Value("FuncExpr")
  val T_NamedArgExpr = Value("NamedArgExpr")
  val T_OpExpr = Value("OpExpr")
  val T_DistinctExpr = Value("DistinctExpr")
  val T_NullIfExpr = Value("NullIfExpr")
  val T_ScalarArrayOpExpr = Value("ScalarArrayOpExpr")
  val T_BoolExpr = Value("BoolExpr")
  val T_SubLink = Value("SubLink")
  val T_SubPlan = Value("SubPlan")
  val T_AlternativeSubPlan = Value("AlternativeSubPlan")
  val T_FieldSelect = Value("FieldSelect")
  val T_FieldStore = Value("FieldStore")
  val T_RelabelType = Value("RelabelType")
  val T_CoerceViaIO = Value("CoerceViaIO")
  val T_ArrayCoerceExpr = Value("ArrayCoerceExpr")
  val T_ConvertRowtypeExpr = Value("ConvertRowtypeExpr")
  val T_CollateExpr = Value("CollateExpr")
  val T_CaseExpr = Value("CaseExpr")
  val T_CaseWhen = Value("CaseWhen")
  val T_CaseTestExpr = Value("CaseTestExpr")
  val T_ArrayExpr = Value("ArrayExpr")
  val T_RowExpr = Value("RowExpr")
  val T_RowCompareExpr = Value("RowCompareExpr")
  val T_CoalesceExpr = Value("CoalesceExpr")
  val T_MinMaxExpr = Value("MinMaxExpr")
  val T_SQLValueFunction = Value("SQLValueFunction")
  val T_XmlExpr = Value("XmlExpr")
  val T_NullTest = Value("NullTest")
  val T_BooleanTest = Value("BooleanTest")
  val T_CoerceToDomain = Value("CoerceToDomain")
  val T_CoerceToDomainValue = Value("CoerceToDomainValue")
  val T_SetToDefault = Value("SetToDefault")
  val T_CurrentOfExpr = Value("CurrentOfExpr")
  val T_NextValueExpr = Value("NextValueExpr")
  val T_InferenceElem = Value("InferenceElem")
  val T_TargetEntry = Value("TargetEntry")
  val T_RangeTblRef = Value("RangeTblRef")
  val T_JoinExpr = Value("JoinExpr")
  val T_FromExpr = Value("FromExpr")
  val T_OnConflictExpr = Value("OnConflictExpr")
  val T_IntoClause = Value("IntoClause")
  /*
     * TAGS FOR EXPRESSION STATE NODES (execnodes.h)
     *
     * ExprState represents the evaluation state for a whole expression tree.
     * Most Expr-based plan nodes do not have a corresponding expression state
     * node, they're fully handled within execExpr* - but sometimes the state
     * needs to be shared with other parts of the executor, as for example
     * with AggrefExprState, which nodeAgg.c has to modify.
     */
  val T_ExprState = Value("ExprState")
  val T_AggrefExprState = Value("AggrefExprState")
  val T_WindowFuncExprState = Value("WindowFuncExprState")
  val T_SetExprState = Value("SetExprState")
  val T_SubPlanState = Value("SubPlanState")
  val T_AlternativeSubPlanState = Value("AlternativeSubPlanState")
  val T_DomainConstraintState = Value("DomainConstraintState")
  /*
     * TAGS FOR PLANNER NODES (relation.h)
     */
  val T_PlannerInfo = Value("PlannerInfo")
  val T_PlannerGlobal = Value("PlannerGlobal")
  val T_RelOptInfo = Value("RelOptInfo")
  val T_IndexOptInfo = Value("IndexOptInfo")
  val T_ForeignKeyOptInfo = Value("ForeignKeyOptInfo")
  val T_ParamPathInfo = Value("ParamPathInfo")
  val T_Path = Value("Path")
  val T_IndexPath = Value("IndexPath")
  val T_BitmapHeapPath = Value("BitmapHeapPath")
  val T_BitmapAndPath = Value("BitmapAndPath")
  val T_BitmapOrPath = Value("BitmapOrPath")
  val T_TidPath = Value("TidPath")
  val T_SubqueryScanPath = Value("SubqueryScanPath")
  val T_ForeignPath = Value("ForeignPath")
  val T_CustomPath = Value("CustomPath")
  val T_NestPath = Value("NestPath")
  val T_MergePath = Value("MergePath")
  val T_HashPath = Value("HashPath")
  val T_AppendPath = Value("AppendPath")
  val T_MergeAppendPath = Value("MergeAppendPath")
  val T_ResultPath = Value("ResultPath")
  val T_MaterialPath = Value("MaterialPath")
  val T_UniquePath = Value("UniquePath")
  val T_GatherPath = Value("GatherPath")
  val T_GatherMergePath = Value("GatherMergePath")
  val T_ProjectionPath = Value("ProjectionPath")
  val T_ProjectSetPath = Value("ProjectSetPath")
  val T_SortPath = Value("SortPath")
  val T_GroupPath = Value("GroupPath")
  val T_UpperUniquePath = Value("UpperUniquePath")
  val T_AggPath = Value("AggPath")
  val T_GroupingSetsPath = Value("GroupingSetsPath")
  val T_MinMaxAggPath = Value("MinMaxAggPath")
  val T_WindowAggPath = Value("WindowAggPath")
  val T_SetOpPath = Value("SetOpPath")
  val T_RecursiveUnionPath = Value("RecursiveUnionPath")
  val T_LockRowsPath = Value("LockRowsPath")
  val T_ModifyTablePath = Value("ModifyTablePath")
  val T_LimitPath = Value("LimitPath")
  /* these aren't subclasses of Path: */
  val T_EquivalenceClass = Value("EquivalenceClass")
  val T_EquivalenceMember = Value("EquivalenceMember")
  val T_PathKey = Value("PathKey")
  val T_PathTarget = Value("PathTarget")
  val T_RestrictInfo = Value("RestrictInfo")
  val T_PlaceHolderVar = Value("PlaceHolderVar")
  val T_SpecialJoinInfo = Value("SpecialJoinInfo")
  val T_AppendRelInfo = Value("AppendRelInfo")
  val T_PartitionedChildRelInfo = Value("PartitionedChildRelInfo")
  val T_PlaceHolderInfo = Value("PlaceHolderInfo")
  val T_MinMaxAggInfo = Value("MinMaxAggInfo")
  val T_PlannerParamItem = Value("PlannerParamItem")
  val T_RollupData = Value("RollupData")
  val T_GroupingSetData = Value("GroupingSetData")
  val T_StatisticExtInfo = Value("StatisticExtInfo")
  /*
     * TAGS FOR MEMORY NODES (memnodes.h)
     */
  val T_MemoryContext = Value("MemoryContext")
  val T_AllocSetContext = Value("AllocSetContext")
  val T_SlabContext = Value("SlabContext")
  /*
     * TAGS FOR VALUE NODES (value.h)
     */
  val T_Value = Value("Value")
  val T_Integer = Value("Integer")
  val T_Float = Value("Float")
  val T_String = Value("String")
  val T_BitString = Value("BitString")
  val T_Null = Value("Null")
  /*
     * TAGS FOR LIST NODES (pg_list.h)
     */
  val T_List = Value("List")
  val T_IntList = Value("IntList")
  val T_OidList = Value("OidList")
  /*
     * TAGS FOR EXTENSIBLE NODES (extensible.h)
     */
  val T_ExtensibleNode = Value("ExtensibleNode")
  /*
     * TAGS FOR STATEMENT NODES (mostly in parsenodes.h)
     */
  val T_RawStmt = Value("RawStmt")
  val T_Query = Value("Query")
  val T_PlannedStmt = Value("PlannedStmt")
  val T_InsertStmt = Value("InsertStmt")
  val T_DeleteStmt = Value("DeleteStmt")
  val T_UpdateStmt = Value("UpdateStmt")
  val T_SelectStmt = Value("SelectStmt")
  val T_AlterTableStmt = Value("AlterTableStmt")
  val T_AlterTableCmd = Value("AlterTableCmd")
  val T_AlterDomainStmt = Value("AlterDomainStmt")
  val T_SetOperationStmt = Value("SetOperationStmt")
  val T_GrantStmt = Value("GrantStmt")
  val T_GrantRoleStmt = Value("GrantRoleStmt")
  val T_AlterDefaultPrivilegesStmt = Value("AlterDefaultPrivilegesStmt")
  val T_ClosePortalStmt = Value("ClosePortalStmt")
  val T_ClusterStmt = Value("ClusterStmt")
  val T_CopyStmt = Value("CopyStmt")
  val T_CreateStmt = Value("CreateStmt")
  val T_DefineStmt = Value("DefineStmt")
  val T_DropStmt = Value("DropStmt")
  val T_TruncateStmt = Value("TruncateStmt")
  val T_CommentStmt = Value("CommentStmt")
  val T_FetchStmt = Value("FetchStmt")
  val T_IndexStmt = Value("IndexStmt")
  val T_CreateFunctionStmt = Value("CreateFunctionStmt")
  val T_AlterFunctionStmt = Value("AlterFunctionStmt")
  val T_DoStmt = Value("DoStmt")
  val T_RenameStmt = Value("RenameStmt")
  val T_RuleStmt = Value("RuleStmt")
  val T_NotifyStmt = Value("NotifyStmt")
  val T_ListenStmt = Value("ListenStmt")
  val T_UnlistenStmt = Value("UnlistenStmt")
  val T_TransactionStmt = Value("TransactionStmt")
  val T_ViewStmt = Value("ViewStmt")
  val T_LoadStmt = Value("LoadStmt")
  val T_CreateDomainStmt = Value("CreateDomainStmt")
  val T_CreatedbStmt = Value("CreatedbStmt")
  val T_DropdbStmt = Value("DropdbStmt")
  val T_VacuumStmt = Value("VacuumStmt")
  val T_ExplainStmt = Value("ExplainStmt")
  val T_CreateTableAsStmt = Value("CreateTableAsStmt")
  val T_CreateSeqStmt = Value("CreateSeqStmt")
  val T_AlterSeqStmt = Value("AlterSeqStmt")
  val T_VariableSetStmt = Value("VariableSetStmt")
  val T_VariableShowStmt = Value("VariableShowStmt")
  val T_DiscardStmt = Value("DiscardStmt")
  val T_CreateTrigStmt = Value("CreateTrigStmt")
  val T_CreatePLangStmt = Value("CreatePLangStmt")
  val T_CreateRoleStmt = Value("CreateRoleStmt")
  val T_AlterRoleStmt = Value("AlterRoleStmt")
  val T_DropRoleStmt = Value("DropRoleStmt")
  val T_LockStmt = Value("LockStmt")
  val T_ConstraintsSetStmt = Value("ConstraintsSetStmt")
  val T_ReindexStmt = Value("ReindexStmt")
  val T_CheckPointStmt = Value("CheckPointStmt")
  val T_CreateSchemaStmt = Value("CreateSchemaStmt")
  val T_AlterDatabaseStmt = Value("AlterDatabaseStmt")
  val T_AlterDatabaseSetStmt = Value("AlterDatabaseSetStmt")
  val T_AlterRoleSetStmt = Value("AlterRoleSetStmt")
  val T_CreateConversionStmt = Value("CreateConversionStmt")
  val T_CreateCastStmt = Value("CreateCastStmt")
  val T_CreateOpClassStmt = Value("CreateOpClassStmt")
  val T_CreateOpFamilyStmt = Value("CreateOpFamilyStmt")
  val T_AlterOpFamilyStmt = Value("AlterOpFamilyStmt")
  val T_PrepareStmt = Value("PrepareStmt")
  val T_ExecuteStmt = Value("ExecuteStmt")
  val T_DeallocateStmt = Value("DeallocateStmt")
  val T_DeclareCursorStmt = Value("DeclareCursorStmt")
  val T_CreateTableSpaceStmt = Value("CreateTableSpaceStmt")
  val T_DropTableSpaceStmt = Value("DropTableSpaceStmt")
  val T_AlterObjectDependsStmt = Value("AlterObjectDependsStmt")
  val T_AlterObjectSchemaStmt = Value("AlterObjectSchemaStmt")
  val T_AlterOwnerStmt = Value("AlterOwnerStmt")
  val T_AlterOperatorStmt = Value("AlterOperatorStmt")
  val T_DropOwnedStmt = Value("DropOwnedStmt")
  val T_ReassignOwnedStmt = Value("ReassignOwnedStmt")
  val T_CompositeTypeStmt = Value("CompositeTypeStmt")
  val T_CreateEnumStmt = Value("CreateEnumStmt")
  val T_CreateRangeStmt = Value("CreateRangeStmt")
  val T_AlterEnumStmt = Value("AlterEnumStmt")
  val T_AlterTSDictionaryStmt = Value("AlterTSDictionaryStmt")
  val T_AlterTSConfigurationStmt = Value("AlterTSConfigurationStmt")
  val T_CreateFdwStmt = Value("CreateFdwStmt")
  val T_AlterFdwStmt = Value("AlterFdwStmt")
  val T_CreateForeignServerStmt = Value("CreateForeignServerStmt")
  val T_AlterForeignServerStmt = Value("AlterForeignServerStmt")
  val T_CreateUserMappingStmt = Value("CreateUserMappingStmt")
  val T_AlterUserMappingStmt = Value("AlterUserMappingStmt")
  val T_DropUserMappingStmt = Value("DropUserMappingStmt")
  val T_AlterTableSpaceOptionsStmt = Value("AlterTableSpaceOptionsStmt")
  val T_AlterTableMoveAllStmt = Value("AlterTableMoveAllStmt")
  val T_SecLabelStmt = Value("SecLabelStmt")
  val T_CreateForeignTableStmt = Value("CreateForeignTableStmt")
  val T_ImportForeignSchemaStmt = Value("ImportForeignSchemaStmt")
  val T_CreateExtensionStmt = Value("CreateExtensionStmt")
  val T_AlterExtensionStmt = Value("AlterExtensionStmt")
  val T_AlterExtensionContentsStmt = Value("AlterExtensionContentsStmt")
  val T_CreateEventTrigStmt = Value("CreateEventTrigStmt")
  val T_AlterEventTrigStmt = Value("AlterEventTrigStmt")
  val T_RefreshMatViewStmt = Value("RefreshMatViewStmt")
  val T_ReplicaIdentityStmt = Value("ReplicaIdentityStmt")
  val T_AlterSystemStmt = Value("AlterSystemStmt")
  val T_CreatePolicyStmt = Value("CreatePolicyStmt")
  val T_AlterPolicyStmt = Value("AlterPolicyStmt")
  val T_CreateTransformStmt = Value("CreateTransformStmt")
  val T_CreateAmStmt = Value("CreateAmStmt")
  val T_CreatePublicationStmt = Value("CreatePublicationStmt")
  val T_AlterPublicationStmt = Value("AlterPublicationStmt")
  val T_CreateSubscriptionStmt = Value("CreateSubscriptionStmt")
  val T_AlterSubscriptionStmt = Value("AlterSubscriptionStmt")
  val T_DropSubscriptionStmt = Value("DropSubscriptionStmt")
  val T_CreateStatsStmt = Value("CreateStatsStmt")
  val T_AlterCollationStmt = Value("AlterCollationStmt")
  /*
     * TAGS FOR PARSE TREE NODES (parsenodes.h)
     */
  val T_A_Expr = Value("A_Expr")
  val T_ColumnRef = Value("ColumnRef")
  val T_ParamRef = Value("ParamRef")
  val T_A_Const = Value("A_Const")
  val T_FuncCall = Value("FuncCall")
  val T_A_Star = Value("A_Star")
  val T_A_Indices = Value("A_Indices")
  val T_A_Indirection = Value("A_Indirection")
  val T_A_ArrayExpr = Value("A_ArrayExpr")
  val T_ResTarget = Value("ResTarget")
  val T_MultiAssignRef = Value("MultiAssignRef")
  val T_TypeCast = Value("TypeCast")
  val T_CollateClause = Value("CollateClause")
  val T_SortBy = Value("SortBy")
  val T_WindowDef = Value("WindowDef")
  val T_RangeSubselect = Value("RangeSubselect")
  val T_RangeFunction = Value("RangeFunction")
  val T_RangeTableSample = Value("RangeTableSample")
  val T_RangeTableFunc = Value("RangeTableFunc")
  val T_RangeTableFuncCol = Value("RangeTableFuncCol")
  val T_TypeName = Value("TypeName")
  val T_ColumnDef = Value("ColumnDef")
  val T_IndexElem = Value("IndexElem")
  val T_Constraint = Value("Constraint")
  val T_DefElem = Value("DefElem")
  val T_RangeTblEntry = Value("RangeTblEntry")
  val T_RangeTblFunction = Value("RangeTblFunction")
  val T_TableSampleClause = Value("TableSampleClause")
  val T_WithCheckOption = Value("WithCheckOption")
  val T_SortGroupClause = Value("SortGroupClause")
  val T_GroupingSet = Value("GroupingSet")
  val T_WindowClause = Value("WindowClause")
  val T_ObjectWithArgs = Value("ObjectWithArgs")
  val T_AccessPriv = Value("AccessPriv")
  val T_CreateOpClassItem = Value("CreateOpClassItem")
  val T_TableLikeClause = Value("TableLikeClause")
  val T_FunctionParameter = Value("FunctionParameter")
  val T_LockingClause = Value("LockingClause")
  val T_RowMarkClause = Value("RowMarkClause")
  val T_XmlSerialize = Value("XmlSerialize")
  val T_WithClause = Value("WithClause")
  val T_InferClause = Value("InferClause")
  val T_OnConflictClause = Value("OnConflictClause")
  val T_CommonTableExpr = Value("CommonTableExpr")
  val T_RoleSpec = Value("RoleSpec")
  val T_TriggerTransition = Value("TriggerTransition")
  val T_PartitionElem = Value("PartitionElem")
  val T_PartitionSpec = Value("PartitionSpec")
  val T_PartitionBoundSpec = Value("PartitionBoundSpec")
  val T_PartitionRangeDatum = Value("PartitionRangeDatum")
  val T_PartitionCmd = Value("PartitionCmd")
  /*
     * TAGS FOR REPLICATION GRAMMAR PARSE NODES (replnodes.h)
     */
  val T_IdentifySystemCmd = Value("IdentifySystemCmd")
  val T_BaseBackupCmd = Value("BaseBackupCmd")
  val T_CreateReplicationSlotCmd = Value("CreateReplicationSlotCmd")
  val T_DropReplicationSlotCmd = Value("DropReplicationSlotCmd")
  val T_StartReplicationCmd = Value("StartReplicationCmd")
  val T_TimeLineHistoryCmd = Value("TimeLineHistoryCmd")
  val T_SQLCmd = Value("SQLCmd")
}
